name: Deploy Client build-files to Amazon S3

on:
  pull_request:
    branches: 
      - dev
    types: [closed]
    paths:
      - "client/**"  
  push:
    branches:
      - chore/CI-test

env:
  WORKING_DIRECTORY: ./client

  AWS_ACCESS_KEY_ID: ${{ secrets.CLIENT_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.CLIENT_AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: catvillage.shop
  AWS_DISTRIBUTION_ID: ${{ secrets.CLIENT_AWS_DISTRIBUTION_ID }}

  APP_API: https://catvillage.tk

jobs:
  build_deploy_dev:
    name: Build, Deploy to S3 Bucket

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      
      - name: Cache node modules
        uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: npm-packages-${{ hashFiles('**/package-lock.json') }}

      - name: Install Depenencies
        # if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Generate Environment Variables File for Production
        run:  | 
          echo "PUBLIC_URL=https://${{ env.AWS_S3_BUCKET }}">>./env/.env.prod
          echo "APP_API=https://${{ env.APP_API }}">>./env/.env.prod
          cat env/.env.prod
      - name: Build
        run: npm run build

      - name: Deploy to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
        run: |
            aws s3 cp \
              --recursive \
              --region ${{ env.AWS_REGION }} \
              build s3://${{ env.AWS_S3_BUCKET }}

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.AWS_DISTRIBUTION_ID }} \
            --paths "/*"